name: Build and deploy Angular app with Node backend to Azure Web App - celestradepro

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Navigate to the celestradepro directory, install dependencies, and build the frontend app
      - name: Install Angular CLI and frontend dependencies
        run: |
          cd celestradepro
          npm install -g @angular/cli
          npm install -f
          npm install ws@latest @types/ws@latest -f
      - name: Modify TypeScript Files
        run: |
          find . -type f -name '*.ts' -exec sed -i '/server?: HTTPServer<V> | HTTPSServer<V> | undefined;/s/^/\/\/ @ts-ignore\n/' {} \;
      - name: Build Angular app
        working-directory: ./celestradepro
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096" # 4GB of memory
          ng build 
      # Upload the built Angular app as an artifact for the deploy job
      - name: Upload frontend artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: angular-app
          path: celestradepro/www

      # Install backend dependencies
      - name: Install backend dependencies
        working-directory: ./celestradepro
        run: |
          npm install -f
          npm install mongoose -f
      # Start backend server with Azure Cosmos DB connection string
      - name: Start backend server
        working-directory: ./celestradepro/Backend
        run: |
          node server.js &
        env:
          AZURE_COSMOS_CONNECTIONSTRING: "mongodb://celescontainerwebapp-server:Cd8bsmtPGb944jUTWSF6f03i9ZyuoYpKSNd14ZX7rrL5hM9yzcdZF6WidOZABiakigan29ihvSGtACDbgtLJdg==@celescontainerwebapp-server.mongo.cosmos.azure.com:10255/celescontainerwebapp-db?ssl=true&replicaSet=globaldb&retrywrites=false&maxIdleTimeMS=120000&appName=@celescontainerwebapp-server@"
          DB_NAME: 'test'  # Set a custom DB name or use default 'test'
          PORT: 3000  # Ensure the port is set to match your configuration
          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'

    steps:
      # Ensure deployment slot exists
      - name: Create deployment slot if it doesn't exist
        run: |
          az webapp deployment slot create --name CelesContainerWebApp --resource-group celesbricks --slot Production || echo "Slot already exists."

      # Download the frontend build artifact
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: angular-app
          path: www

      # Display the files in the dist directory (for troubleshooting)
      - name: List files in the dist directory
        run: ls -R www

      # Deploy to Azure Web App
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'CelesContainerWebApp'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_7EA540B6EFD640D89D465639D713F193 }}
