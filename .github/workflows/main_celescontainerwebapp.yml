name: Deploy to Azure App Service

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Setup and Build Frontend
      - name: Set up Node.js for frontend
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Install frontend dependencies and build
        run: |
          cd celestradepro
          npm install -g @angular/cli
          npm install --legacy-peer-deps
          npm install ws@latest @types/ws@latest --legacy-peer-deps
          npm install highcharts --save
          npm run build --prod

      # Step 3: Modify TypeScript Files (Optional)
      - name: Modify TypeScript Files
        run: |
          cd celestradepro
          find . -type f -name '*.ts' -exec sed -i '/server?: HTTPServer<V> | HTTPSServer<V> | undefined;/s/^/\/\/ @ts-ignore\n/' {} \;

      # Step 4: Setup and Deploy Backend
      - name: Install dependencies for backend
        run: |
          npm install --legacy-peer-deps

      - name: Deploy Backend and Frontend to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'CelesContainerWebApp'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: '.' # Deploy both backend and frontend together

      # Step 5: Optional Clean-up or Post-deployment steps
      - name: Post Deployment Cleanup
        run: |
          echo "Deployment successful. Cleanup steps, if any, can be added here."
