name: Build and deploy Angular app with Node backend to Azure Web App - celestradepro

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Install dependencies for backend and frontend
      - name: Install dependencies for backend and frontend
        run: |
          npm install -g @angular/cli
          cd celestradepro
          npm install -f
          cd celestradepro/backend
          npm install

      # Modify TypeScript Files
      - name: Modify TypeScript Files
        run: |
          cd celestradepro
          find . -type f -name '*.ts' -exec sed -i '/server?: HTTPServer<V> | HTTPSServer<V> | undefined;/s/^/\/\/ @ts-ignore\n/' {} \;

      # Build Angular app
      - name: Build Angular app
        working-directory: ./celestradepro
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096" # Allocate 4GB memory
          ng build --base-href /

      # Copy Angular build output to backend public folder
      - name: Move Angular build to backend
        run: |
          mv celestradepro/dist/celestradepro backend/public

      # Package the entire backend (with Angular)
      - name: Prepare deployment package
        working-directory: ./celestradepro/backend
        run: |
          zip -r ../deploy-package.zip .

      # Upload the deployment package as an artifact
      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: deploy-package
          path: deploy-package.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'staging'  # Ensure this matches your Azure slot name

    steps:
      # Download the deployment package
      - name: Download deployment package
        uses: actions/download-artifact@v4
        with:
          name: deploy-package
          path: deploy-package.zip

      # Deploy to Azure Web App
      - name: Deploy to Azure Web App using OneDeploy
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'CelesContainerWebApp'   # Exact name of your Azure Web App
          slot-name: 'staging'              # Slot name must match Azure
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}  # Publish profile for your Azure app
          package: deploy-package.zip       # Deploy full backend + frontend package
          deploy-type: 'zip'                # Ensures full replacement of files
          resource-group: 'celesbricks'     # Must match the Azure resource group

      # Optional: Restart Azure App Service
      - name: Restart Azure App Service
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp restart --name CelesContainerWebApp --resource-group celesbricks
