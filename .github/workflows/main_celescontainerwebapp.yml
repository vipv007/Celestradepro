name: Deploy to Azure App Service

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Frontend deployment steps
      - name: Set up Node.js for frontend
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Install Angular CLI and frontend dependencies
        run: |
          cd celestradepro
          npm install -g @angular/cli
          npm install -f
          npm install ws@latest @types/ws@latest -f
          npm install highcharts --save

      - name: Modify TypeScript Files (Optional)
        run: |
          cd celestradepro
          find . -type f -name '*.ts' -exec sed -i '/server?: HTTPServer<V> | HTTPSServer<V> | undefined;/s/^/\/\/ @ts-ignore\n/' {} \;

      - name: Build frontend
        run: |
          cd celestradepro
          npm install
          npm install webpack --save-dev
          npm run build --prod

      # Backend deployment steps
      - name: Set up Node.js for backend
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Install backend dependencies and MongoDB
        run: |
          cd celestradepro/Backend
          npm install
          npm install mongodb --save
          npm install ws@latest @types/ws@latest --save

      - name: Modify TypeScript Files in Backend
        run: |
          cd celestradepro/Backend
          find . -type f -name '*.ts' -exec sed -i '/server?: HTTPServer<V> | HTTPSServer<V> | undefined;/s/^/\/\/ @ts-ignore\n/' {} \;

      - name: Build and package backend
        run: |
          cd celestradepro/Backend
          npm run build  # Replace with 'tsc' or other build scripts if needed

      - name: Deploy Backend to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'CelesContainerWebApp'
          slot-name: 'staging'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: 'celestradepro/Backend'  # Path to the backend folder

      # Frontend deployment (if applicable)
      - name: Deploy Frontend to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'CelesContainerWebApp'
          slot-name: 'staging'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: 'celestradepro/www'  # Path to the frontend build folder
