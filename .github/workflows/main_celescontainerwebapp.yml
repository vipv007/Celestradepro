name: Build and deploy Angular app with Node backend to Azure Web App - celestradepro

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Install frontend dependencies and build Angular app
      - name: Install Angular CLI and frontend dependencies
        run: |
          cd celestradepro
          npm install -g @angular/cli
          npm install -f
          npm install ws@latest @types/ws@latest -f

      # Modify TypeScript Files
      - name: Modify TypeScript Files
        run: |
          find . -type f -name '*.ts' -exec sed -i '/server?: HTTPServer<V> | HTTPSServer<V> | undefined;/s/^/\/\/ @ts-ignore\n/' {} \;

      # Build Angular app
      - name: Build Angular app
        working-directory: ./celestradepro
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096"
          ng build --output-path=www

      # Install backend dependencies
      - name: Install backend dependencies
        working-directory: ./celestradepro/Backend
        run: |
          npm install -f
          npm install mongoose -f

      # Upload frontend build artifact
      - name: Upload frontend artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: celestradepro/www

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'staging'

    steps:
      # Download artifacts from build job
      - name: Download artifacts from build job
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: www

      # Download source code for backend
      - uses: actions/checkout@v4

      # List files for verification
      - name: List files in deployment directory
        run: ls -R www

      # Deploy to Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'CelesContainerWebApp'
          slot-name: 'staging'
          package: www
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}

      # Ensure backend starts properly
      - name: Start backend server
        run: |
          echo "Setting up backend..."
          cd celestradepro/Backend
          npm install
          npm install mongoose
          
          echo "Starting backend server..."
          # Use PM2 to manage the Node.js process
          npm install -g pm2
          pm2 start server.js
        env:
          AZURE_COSMOS_CONNECTIONSTRING: ${{ secrets.AZURE_COSMOS_CONNECTIONSTRING }}
          DB_NAME: 'test'
          PORT: 443

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Install frontend dependencies and build Angular app
      - name: Install Angular CLI and frontend dependencies
        run: |
          cd celestradepro
          npm install -g @angular/cli
          npm install -f
          npm install ws@latest @types/ws@latest -f
      - name: Modify TypeScript Files
        run: |
          find . -type f -name '*.ts' -exec sed -i '/server?: HTTPServer<V> | HTTPSServer<V> | undefined;/s/^/\/\/ @ts-ignore\n/' {} \;
      - name: Build Angular app
        working-directory: ./celestradepro
        run: |
          export NODE_OPTIONS="--max-old-space-size=4096"
          ng build --output-path=www

      # Upload frontend build artifact
      - name: Upload frontend artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: angular-app
          path: celestradepro/www

      # Install backend dependencies
      - name: Install backend dependencies
        working-directory: ./celestradepro/Backend
        run: |
          npm install -f
          npm install mongoose -f

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'staging'

    steps:
      # Download frontend artifact
      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: angular-app
          path: www

      # List files to verify structure
      - name: List files in deployment directory
        run: ls -R www

      # Deploy Angular app and backend to Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'CelesContainerWebApp'
          slot-name: 'staging'
          package: www
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}

      # Ensure backend starts after deployment
      - name: Start backend server
        run: |
          echo "Verifying backend directory structure..."
          ls -R .

          if [ -d "./www/Backend" ]; then
            cd ./www/Backend
          else
            echo "Backend directory not found! Exiting..."
            exit 1
          fi

          # Install dependencies
          npm install
          npm install mongoose

          # Start backend server
          echo "Starting backend server..."
          nohup npm start &  # Keep backend running in the background
        env:
          AZURE_COSMOS_CONNECTIONSTRING: "mongodb://celescontainerwebapp-server:Cd8bsmtPGb944jUTWSF6f03i9ZyuoYpKSNd14ZX7rrL5hM9yzcdZF6WidOZABiakigan29ihvSGtACDbgtLJdg==@celescontainerwebapp-server.mongo.cosmos.azure.com:10255/?ssl=true&retrywrites=false"
          DB_NAME: 'test'
          PORT: 443

