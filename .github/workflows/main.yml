name: Build, Test, and Deploy Angular

on:
  push:
    branches:
      - main

jobs:
  build-test-and-deploy:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: --health-cmd "mongo --eval 'db.runCommand({ connectionStatus: 1 })'" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install Dependencies
        run: |
          npm install
          npm install highcharts
          npm uninstall igniteui-angular-charts igniteui-angular-core
          npm install igniteui-angular-charts igniteui-angular-core
        working-directory: ./celestradepro



      - name: Modify TypeScript Files
        run: |
          find . -type f -name '*.ts' -exec sed -i '/server?: HTTPServer<V> | HTTPSServer<V> | undefined;/s/^/\/\/ @ts-ignore\n/' {} \;

      - name: Build Angular App
        run: |
          export NODE_OPTIONS=--max_old_space_size=4096
          npm run build
        working-directory: ./celestradepro
        env:
          NG_BUILD_OPTIMIZATION: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        run: |
          docker build -t vipv/kuber:${{ github.run_number }} -f ./Dockerfile .

      - name: Log in to Docker Hub
        run: |
          docker login -u vipv -p 9092897730

      - name: Push Docker Image
        run: |
          docker push vipv/kuber:${{ github.run_number }}

      - name: Run Docker Container
        run: |
          docker run -d -p 4200:4200 vipv/kuber:${{ github.run_number }}

      - name: Verify MongoDB Connection
        run: |
          mongo --host localhost:27017 --eval "db.runCommand({ connectionStatus: 1 })"
